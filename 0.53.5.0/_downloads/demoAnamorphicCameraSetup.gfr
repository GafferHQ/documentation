import Gaffer
import GafferAppleseed
import GafferDispatch
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Gaffy"] = Gaffer.Box( "Gaffy" )
parent.addChild( __children["Gaffy"] )
__children["Gaffy"].addChild( GafferScene.SceneReader( "SceneReader" ) )
__children["Gaffy"]["SceneReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferOSL.OSLShader( "as_disney_material" ) )
__children["Gaffy"]["as_disney_material"].loadShader( "material/as_disney_material" )
__children["Gaffy"]["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["Gaffy"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferOSL.OSLShader( "as_color_texture" ) )
__children["Gaffy"]["as_color_texture"].loadShader( "texture2d/as_color_texture" )
__children["Gaffy"]["as_color_texture"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment1" ) )
__children["Gaffy"]["ShaderAssignment1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferOSL.OSLShader( "as_disney_material1" ) )
__children["Gaffy"]["as_disney_material1"].loadShader( "material/as_disney_material" )
__children["Gaffy"]["as_disney_material1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Gaffy"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Gaffy"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Gaffy"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"] = GafferScene.Group( "Group" )
parent.addChild( __children["Group"] )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["point_light"] = GafferAppleseed.AppleseedLight( "point_light" )
parent.addChild( __children["point_light"] )
__children["point_light"].loadShader( "point_light" )
__children["point_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedOptions"] = GafferAppleseed.AppleseedOptions( "AppleseedOptions" )
parent.addChild( __children["AppleseedOptions"] )
__children["AppleseedOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "quantize", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.StringPlug( "name", defaultValue = 'quantize', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["AppleseedRender"] = GafferAppleseed.AppleseedRender( "AppleseedRender" )
parent.addChild( __children["AppleseedRender"] )
__children["AppleseedRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Resize"] = GafferImage.Resize( "Resize" )
parent.addChild( __children["Resize"] )
__children["Resize"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"] = Gaffer.Backdrop( "Backdrop" )
parent.addChild( __children["Backdrop"] )
__children["Backdrop"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Curtain"] = Gaffer.Box( "Curtain" )
parent.addChild( __children["Curtain"] )
__children["Curtain"].addChild( GafferScene.Plane( "Plane" ) )
__children["Curtain"]["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Curtain"].addChild( GafferScene.ShaderAssignment( "ShaderAssignment" ) )
__children["Curtain"]["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Curtain"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Curtain"].addChild( GafferScene.PathFilter( "PathFilter" ) )
__children["Curtain"]["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Curtain"].addChild( GafferOSL.OSLShader( "as_disney_material" ) )
__children["Curtain"]["as_disney_material"].loadShader( "material/as_disney_material" )
__children["Curtain"]["as_disney_material"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Curtain"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Curtain"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Curtain"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Curtain"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"] = Gaffer.Backdrop( "Backdrop1" )
parent.addChild( __children["Backdrop1"] )
__children["Backdrop1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 54656 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Gaffy"]["SceneReader"]["fileName"].setValue( '${GAFFER_ROOT}/resources/gafferBot/caches/gafferBot.scc' )
__children["Gaffy"]["SceneReader"]["__uiPosition"].setValue( imath.V2f( -19.8473587, 12.7251635 ) )
__children["Gaffy"]["as_disney_material"]["parameters"]["BaseColor"].setInput( __children["Gaffy"]["as_color_texture"]["out"]["ColorOut"] )
__children["Gaffy"]["as_disney_material"]["parameters"]["BaseColor"]["r"].setInput( __children["Gaffy"]["as_color_texture"]["out"]["ColorOut"]["r"] )
__children["Gaffy"]["as_disney_material"]["parameters"]["BaseColor"]["g"].setInput( __children["Gaffy"]["as_color_texture"]["out"]["ColorOut"]["g"] )
__children["Gaffy"]["as_disney_material"]["parameters"]["BaseColor"]["b"].setInput( __children["Gaffy"]["as_color_texture"]["out"]["ColorOut"]["b"] )
__children["Gaffy"]["as_disney_material"]["__uiPosition"].setValue( imath.V2f( -37.4093132, 4.56110096 ) )
__children["Gaffy"]["ShaderAssignment"]["in"].setInput( __children["Gaffy"]["SceneReader"]["out"] )
__children["Gaffy"]["ShaderAssignment"]["shader"].setInput( __children["Gaffy"]["as_disney_material"]["out"] )
__children["Gaffy"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( -19.8468552, 4.56110096 ) )
__children["Gaffy"]["as_color_texture"]["parameters"]["Filename"].setValue( '${GAFFER_ROOT}/resources/gafferBot/textures/base_COL/base_COL_' )
__children["Gaffy"]["as_color_texture"]["parameters"]["UDIM"].setValue( 'mari' )
__children["Gaffy"]["as_color_texture"]["__uiPosition"].setValue( imath.V2f( -54.2660179, 8.76109123 ) )
__children["Gaffy"]["ShaderAssignment1"]["in"].setInput( __children["Gaffy"]["ShaderAssignment"]["out"] )
__children["Gaffy"]["ShaderAssignment1"]["filter"].setInput( __children["Gaffy"]["PathFilter"]["out"] )
__children["Gaffy"]["ShaderAssignment1"]["shader"].setInput( __children["Gaffy"]["as_disney_material1"]["out"] )
__children["Gaffy"]["ShaderAssignment1"]["__uiPosition"].setValue( imath.V2f( -19.8468552, -14.2388973 ) )
__children["Gaffy"]["as_disney_material1"]["parameters"]["Metallic"].setValue( 0.800000011920929 )
__children["Gaffy"]["as_disney_material1"]["parameters"]["Roughness"].setValue( 0.4000000059604645 )
__children["Gaffy"]["as_disney_material1"]["__uiPosition"].setValue( imath.V2f( -38.0822067, -14.2388983 ) )
__children["Gaffy"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/GAFFERBOT/C_torso_GRP/C_head_GRP/C_head_CPT/C_browNose001_REN', '/GAFFERBOT/C_torso_GRP/C_head_GRP/C_head_CPT/C_mouthGrill001_REN', '/GAFFERBOT/C_torso_GRP/C_head_GRP/C_head_CPT/L_ear001_REN', '/GAFFERBOT/C_torso_GRP/C_head_GRP/C_head_CPT/R_ear001_REN', '/GAFFERBOT/C_torso_GRP/C_key_GRP/C_key_CPT/C_key001_REN', '/GAFFERBOT/C_torso_GRP/C_key_GRP/C_key_CPT/C_key002_REN', '/GAFFERBOT/C_torso_GRP/C_torso_CPT/C_torso004_REN', '/GAFFERBOT/C_torso_GRP/C_torso_CPT/C_torso008_REN', '/GAFFERBOT/C_torso_GRP/C_torso_CPT/C_torso009_REN', '/GAFFERBOT/C_torso_GRP/C_torso_CPT/C_torso010_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_armLower_CPT/L_armLower003_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_armLower_CPT/L_armLower004_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_armLower_CPT/L_armLower006_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_armLower_CPT/L_armLower007_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_clawBottom_GRP/L_clawBottom_CPT/L_clawBottom001_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP/L_clawTop_GRP/L_clawTop_CPT/L_clawTop001_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armUpper_CPT/L_armUpper002_REN', '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armUpper_CPT/L_armUpper004_REN', '/GAFFERBOT/C_torso_GRP/L_legUpper_GRP/L_legLower_GRP/L_legLower_CPT/L_legLower001_REN', '/GAFFERBOT/C_torso_GRP/L_legUpper_GRP/L_legLower_GRP/L_legLower_CPT/L_legLower002_REN', '/GAFFERBOT/C_torso_GRP/L_legUpper_GRP/L_legLower_GRP/L_legLower_CPT/L_legLower005_REN', '/GAFFERBOT/C_torso_GRP/L_legUpper_GRP/L_legUpper_CPT/L_legUpper001_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_armLower_CPT/R_armLower003_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_armLower_CPT/R_armLower004_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_armLower_CPT/R_armLower006_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_armLower_CPT/R_armLower007_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_clawBottom_GRP/R_clawBottom_CPT/R_clawBottom001_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armLower_GRP/R_clawTop_GRP/R_clawTop_CPT/R_clawTop001_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armUpper_CPT/R_armUpper002_REN', '/GAFFERBOT/C_torso_GRP/R_armUpper_GRP/R_armUpper_CPT/R_armUpper004_REN', '/GAFFERBOT/C_torso_GRP/R_legUpper_GRP/R_legLower_GRP/R_legLower_CPT/R_legLower001_REN', '/GAFFERBOT/C_torso_GRP/R_legUpper_GRP/R_legLower_GRP/R_legLower_CPT/R_legLower002_REN', '/GAFFERBOT/C_torso_GRP/R_legUpper_GRP/R_legLower_GRP/R_legLower_CPT/R_legLower005_REN', '/GAFFERBOT/C_torso_GRP/R_legUpper_GRP/R_legUpper_CPT/R_legUpper001_REN' ] ) )
__children["Gaffy"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( -5.24968767, -8.15686131 ) )
__children["Gaffy"]["__uiPosition"].setValue( imath.V2f( 3.19746971, 7.63186836 ) )
__children["Gaffy"]["BoxOut"]["in"].setInput( __children["Gaffy"]["ShaderAssignment1"]["out"] )
Gaffer.Metadata.registerValue( __children["Gaffy"]["BoxOut"]["in"], 'noduleLayout:section', 'top' )
Gaffer.Metadata.registerValue( __children["Gaffy"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
__children["Gaffy"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -19.8455105, -22.5709305 ) )
__children["Gaffy"]["out"].setInput( __children["Gaffy"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Gaffy"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Gaffy"]["out"], 'noduleLayout:section', 'bottom' )
__children["Group"]["in"]["in0"].setInput( __children["Gaffy"]["out"] )
__children["Group"]["in"]["in1"].setInput( __children["Curtain"]["out"] )
__children["Group"]["in"]["in2"].setInput( __children["point_light"]["out"] )
__children["Group"]["in"]["in3"].setInput( __children["Camera"]["out"] )
__children["Group"]["__uiPosition"].setValue( imath.V2f( 22.4963322, -0.700163126 ) )
__children["point_light"]["transform"]["translate"].setValue( imath.V3f( 15, 25, 15 ) )
__children["point_light"]["parameters"]["exposure"].setValue( 12.0 )
__children["point_light"]["__uiPosition"].setValue( imath.V2f( 27.7967987, 7.46389961 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 15, 75 ) )
__children["Camera"]["perspectiveMode"].setValue( 1 )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( 39.149704, 7.46389961 ) )
__children["StandardOptions"]["in"].setInput( __children["Group"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["filmFit"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 960, 1080 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["pixelAspectRatio"]["value"].setValue( 2.0 )
__children["StandardOptions"]["options"]["pixelAspectRatio"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 22.4963322, -8.86422539 ) )
__children["AppleseedOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["AppleseedOptions"]["__uiPosition"].setValue( imath.V2f( 22.4963322, -14.5282879 ) )
__children["Outputs"]["in"].setInput( __children["AppleseedOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Batch/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beauty/beauty.####.exr' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'png' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 22.4963322, -20.1923485 ) )
__children["AppleseedRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["AppleseedRender"]["fileName"].setValue( '${project:rootDirectory}/appleseeds/${script:name}/${script:name}.####.appleseed' )
__children["AppleseedRender"]["__uiPosition"].setValue( imath.V2f( 20.9963322, -25.8564072 ) )
__children["ImageReader"]["fileName"].setValue( '${project:rootDirectory}/renders/${script:name}/beauty/beauty.0001.exr' )
__children["ImageReader"]["refreshCount"].setValue( 18 )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( 5.31188583, -26.1117172 ) )
__children["Resize"]["in"].setInput( __children["ImageReader"]["out"] )
__children["Resize"]["format"].setValue( GafferImage.Format( 960, 1080, 2.000 ) )
Gaffer.Metadata.registerValue( __children["Resize"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Resize"]["fitMode"].setValue( 4 )
__children["Resize"]["__uiPosition"].setValue( imath.V2f( 5.31188583, -34.2757874 ) )
__children["Backdrop"]["title"].setValue( 'Demo: Anamorphic camera' )
__children["Backdrop"]["description"].setValue( 'This simple network recreates an anamorphic camera/lens setup (useful when simulating anamorphic lens flares as FX).\n\nThe distortion is achieved by using the following plug values on the StandardOptions node:\n\n- Resolution: 960x1080 (half the horizontal of the final frame (1920x1080))\n- Pixel aspect ratio: 2\n\nThese values could also be applied using render overrides on the Camera node, or using a downstream CameraTweaks node. In all cases, the result is a squeezed render.\n\nIf the render needs to be read back in, it should be stretched to its desired proportions. In the small network at the bottom of this backdrop, a Resize node applies a custom format to the image:\n\n- Resolution: 960x1080\n- Pixel aspect ratio: 2\n- Fit Mode: Distort\n\nTo render the scene:\n\n1. Select the AppleseedRender node.\n2. Click Execute in the Node Editor.\n3. Dispatch the job locally.\n4. Once the render completes, select the Catalogue node.\n\nTo preview the resized render:\n\n1. Render the scene, as above.\n2. Select the ImageWriter node.\n3. In the Node Editor, click the refresh button to the right of File Name plug.\n4. Select the Resize node.' )
__children["Backdrop"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -16.8507195, 21.9429092 ), imath.V2f( 26.4611454, 80.910141 ) ) )
__children["Backdrop"]["__uiPosition"].setValue( imath.V2f( -31.7430229, -67.0863037 ) )
__children["Curtain"]["Plane"]["transform"]["translate"].setValue( imath.V3f( 0, 15, -15 ) )
__children["Curtain"]["Plane"]["dimensions"].setValue( imath.V2f( 95, 55 ) )
__children["Curtain"]["Plane"]["__uiPosition"].setValue( imath.V2f( 76.4157867, 12.0487871 ) )
__children["Curtain"]["ShaderAssignment"]["in"].setInput( __children["Curtain"]["Plane"]["out"] )
__children["Curtain"]["ShaderAssignment"]["filter"].setInput( __children["Curtain"]["PathFilter"]["out"] )
__children["Curtain"]["ShaderAssignment"]["shader"].setInput( __children["Curtain"]["as_disney_material"]["out"] )
__children["Curtain"]["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 76.4165955, 3.88472676 ) )
__children["Curtain"]["out"].setInput( __children["Curtain"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Curtain"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Curtain"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Curtain"]["out"], 'description', 'The processed output scene.' )
__children["Curtain"]["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/plane' ] ) )
__children["Curtain"]["PathFilter"]["__uiPosition"].setValue( imath.V2f( 90.6888123, 9.96675587 ) )
__children["Curtain"]["as_disney_material"]["parameters"]["BaseColor"].setValue( imath.Color3f( 0, 0, 0 ) )
__children["Curtain"]["as_disney_material"]["parameters"]["Specular"].setValue( 0.0 )
__children["Curtain"]["as_disney_material"]["parameters"]["Roughness"].setValue( 0.0 )
__children["Curtain"]["as_disney_material"]["parameters"]["SheenTint"].setValue( 0.0 )
__children["Curtain"]["as_disney_material"]["parameters"]["ClearcoatGloss"].setValue( 0.0 )
__children["Curtain"]["as_disney_material"]["__uiPosition"].setValue( imath.V2f( 58.86166, 3.88472652 ) )
__children["Curtain"]["BoxOut"]["in"].setInput( __children["Curtain"]["ShaderAssignment"]["out"] )
Gaffer.Metadata.registerValue( __children["Curtain"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Curtain"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Curtain"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Curtain"]["BoxOut"]["__out"], 'description', 'The processed output scene.' )
__children["Curtain"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 77.9158401, -4.44730473 ) )
__children["Curtain"]["__uiPosition"].setValue( imath.V2f( 15.8039341, 7.63186836 ) )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 35.7484741, -25.8561211 ) )
__children["Backdrop1"]["title"].setValue( '' )
__children["Backdrop1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -26.5425835, -31.9056473 ), imath.V2f( 25.9397659, 27.0618172 ) ) )
__children["Backdrop1"]["__uiPosition"].setValue( imath.V2f( 21.1735878, -13.2379751 ) )


del __children

